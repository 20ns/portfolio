import{r as t,R as e,j as s}from"./index-Ci5W37c7.js";import{t as i,l as r}from"./particles-Dms_Mnd_.js";import"./vendor-JrvCYy-U.js";const a=t=>"object"==typeof t&&null!==t;function o(t,e,s=()=>!1){if(!a(t)||!a(e))return t===e;const i=Object.keys(t).filter((t=>!s(t))),r=Object.keys(e).filter((t=>!s(t)));if(i.length!==r.length)return!1;for(const l of i){const i=t[l],r=e[l];if(a(i)&&a(r)){if(i===e&&r===t)continue;if(!o(i,r,s))return!1}else if(Array.isArray(i)&&Array.isArray(r)){if(!n(i,r,s))return!1}else if(i!==r)return!1}return!0}function n(t,e,s){if(t.length!==e.length)return!1;for(let i=0;i<t.length;i++){const r=t[i],l=e[i];if(Array.isArray(r)&&Array.isArray(l)){if(!n(r,l,s))return!1}else if(a(r)&&a(l)){if(!o(r,l,s))return!1}else if(r!==l)return!1}return!0}const l="tsparticles";class p extends t.Component{constructor(t){super(t),this.state={init:!1,library:void 0}}destroy(){this.state.library&&(this.state.library.destroy(),this.setState({library:void 0}))}shouldComponentUpdate(t){const e=t.options??t.params,s=this.props.options??this.props.params;return t.url!==this.props.url||t.id!==this.props.id||t.canvasClassName!==this.props.canvasClassName||t.className!==this.props.className||t.height!==this.props.height||t.width!==this.props.width||!o(t.style,this.props.style)||t.init!==this.props.init||t.loaded!==this.props.loaded||!o(e,s,(t=>t.startsWith("_")))}componentDidUpdate(){this.refresh()}forceUpdate(){this.refresh().then((()=>{super.forceUpdate()}))}componentDidMount(){(async()=>{this.props.init&&await this.props.init(i),this.setState({init:!0},(async()=>{await this.loadParticles()}))})()}componentWillUnmount(){this.destroy()}render(){const{width:t,height:s,className:i,canvasClassName:r,id:a}=this.props;return e.createElement("div",{className:i,id:a},e.createElement("canvas",{className:r,style:{...this.props.style,width:t,height:s}}))}async refresh(){this.destroy(),await this.loadParticles()}async loadParticles(){if(!this.state.init)return;const t=this.props.id??p.defaultProps.id??l,e=await i.load({url:this.props.url,id:t,options:this.props.options??this.props.params});this.props.container&&(this.props.container.current=e),this.setState({library:e}),this.props.loaded&&await this.props.loaded(e)}}p.defaultProps={width:"100%",height:"100%",options:{},style:{},url:void 0,id:l};const c={particles:{number:{value:50,density:{enable:!0,value_area:1e3}},color:{value:"#ffffff"},shape:{type:"circle",stroke:{width:0,color:"#000000"},polygon:{nb_sides:5}},opacity:{value:.2,random:!0,anim:{enable:!1,speed:1,opacity_min:.1,sync:!1}},size:{value:1.5,random:!0,anim:{enable:!1,speed:30,size_min:.1,sync:!1}},line_linked:{enable:!0,distance:120,color:"#ffffff",opacity:.15,width:.8},move:{enable:!0,speed:1,direction:"none",random:!1,straight:!1,out_mode:"out",bounce:!1,attract:{enable:!1,rotateX:600,rotateY:1200}}},interactivity:{detect_on:"canvas",events:{onhover:{enable:!1,mode:"grab"},onclick:{enable:!0,mode:"push"},resize:!0},modes:{push:{particles_nb:2}}},retina_detect:!0},h=t.memo((()=>{const e=t.useCallback((async t=>{await r(t)}),[]);return s(p,{id:"tsparticles",init:e,options:c,style:{willChange:"transform"}})}));export{h as default};
